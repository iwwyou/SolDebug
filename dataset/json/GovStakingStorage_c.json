[
  {
    "code": "contract GovStakingStorage {\n}",
    "startLine": 1,
    "endLine": 2,
    "event": "add"
  },
  {
    "code": "uint256 totalLockedGogo;",
    "startLine": 2,
    "endLine": 2,
    "event": "add"
  },
  {
    "code": "uint256 totalRewardRates;",
    "startLine": 3,
    "endLine": 3,
    "event": "add"
  },
  {
    "code": "uint256 totalRewardMultiplier;",
    "startLine": 4,
    "endLine": 4,
    "event": "add"
  },
  {
    "code": "\n",
    "startLine": 5,
    "endLine": 5,
    "event": "add"
  },
  {
    "code": "struct UserInfo {\n}",
    "startLine": 6,
    "endLine": 7,
    "event": "add"
  },
  {
    "code": "uint256 amount;",
    "startLine": 7,
    "endLine": 7,
    "event": "add"
  },
  {
    "code": "uint256 lockStart;",
    "startLine": 8,
    "endLine": 8,
    "event": "add"
  },
  {
    "code": "uint256 lockPeriod;",
    "startLine": 9,
    "endLine": 9,
    "event": "add"
  },
  {
    "code": "uint256 lastClaimed;",
    "startLine": 10,
    "endLine": 10,
    "event": "add"
  },
  {
    "code": "uint256 unclaimedAmount;",
    "startLine": 11,
    "endLine": 11,
    "event": "add"
  },
  {
    "code": "uint256 rewardRate;",
    "startLine": 12,
    "endLine": 12,
    "event": "add"
  },
  {
    "code": "uint256 rewardMultiplier;",
    "startLine": 13,
    "endLine": 13,
    "event": "add"
  },
  {
    "code": "uint256 userRewardPerTokenPaid;",
    "startLine": 14,
    "endLine": 14,
    "event": "add"
  },
  {
    "code": "uint256 index;",
    "startLine": 15,
    "endLine": 15,
    "event": "add"
  },
  {
    "code": "\n",
    "startLine": 17,
    "endLine": 17,
    "event": "add"
  },
  {
    "code": "mapping(address => UserInfo) public userInfo;",
    "startLine": 18,
    "endLine": 18,
    "event": "add"
  },
  {
    "code": "address[] public userList;",
    "startLine": 19,
    "endLine": 19,
    "event": "add"
  },
  {
    "code": "mapping(address => bool) public allowed;",
    "startLine": 20,
    "endLine": 20,
    "event": "add"
  },
  {
    "code": "\n",
    "startLine": 21,
    "endLine": 21,
    "event": "add"
  },
  {
    "code": "modifier isAllowed() {\n}",
    "startLine": 22,
    "endLine": 23,
    "event": "add"
  },
  {
    "code": "require(allowed[msg.sender], \"sender is not allowed to write\");",
    "startLine": 23,
    "endLine": 23,
    "event": "add"
  },
  {
    "code": "_;",
    "startLine": 24,
    "endLine": 24,
    "event": "add"
  },
  {
    "code": "\n",
    "startLine": 26,
    "endLine": 26,
    "event": "add"
  },
  {
    "code": "function removeUser(address user) external isAllowed {\n}",
    "startLine": 27,
    "endLine": 28,
    "event": "add"
  },
  {
    "code": "require(userInfo[user].index != 0, \"user does not exist\");",
    "startLine": 28,
    "endLine": 28,
    "event": "add"
  },
  {
    "code": "if (userList.length > 1) {\n}",
    "startLine": 29,
    "endLine": 30,
    "event": "add"
  },
  {
    "code": "address lastAddress = userList[userList.length - 1];",
    "startLine": 30,
    "endLine": 30,
    "event": "add"
  },
  {
    "code": "uint256 oldIndex = userInfo[user].index;",
    "startLine": 31,
    "endLine": 31,
    "event": "add"
  },
  {
    "code": "userList[oldIndex] = lastAddress;",
    "startLine": 32,
    "endLine": 32,
    "event": "add"
  },
  {
    "code": "userInfo[lastAddress].index = oldIndex;",
    "startLine": 33,
    "endLine": 33,
    "event": "add"
  },
  {
    "code": "userList.pop();",
    "startLine": 35,
    "endLine": 35,
    "event": "add"
  },
  {
    "code": "totalRewardMultiplier -= userInfo[user].rewardMultiplier;",
    "startLine": 36,
    "endLine": 36,
    "event": "add"
  },
  {
    "code": "delete userInfo[user];",
    "startLine": 37,
    "endLine": 37,
    "event": "add"
  },
  {
    "code": "\n",
    "startLine": 39,
    "endLine": 39,
    "event": "add"
  },
  {
    "code": "function updateRewardMultiplier(address user, uint256 oldRate, uint256 newRate, uint256 passedTime, uint256 oldLockPeriod, uint256 newLockPeriod, uint256 oldAmount, uint256 newAmount) external isAllowed {\n}",
    "startLine": 40,
    "endLine": 41,
    "event": "add"
  },
  {
    "code": "UserInfo storage info = userInfo[user];",
    "startLine": 41,
    "endLine": 41,
    "event": "add"
  },
  {
    "code": "uint256 toRemove = ((((oldLockPeriod - passedTime) / 1 weeks) * oldRate) * oldAmount) / 100000;",
    "startLine": 42,
    "endLine": 42,
    "event": "add"
  },
  {
    "code": "uint256 toAdd = (((newLockPeriod / 1 weeks) * newRate) * newAmount) / 100000;",
    "startLine": 43,
    "endLine": 43,
    "event": "add"
  },
  {
    "code": "info.rewardMultiplier = info.rewardMultiplier + toAdd - toRemove;",
    "startLine": 44,
    "endLine": 44,
    "event": "add"
  },
  {
    "code": "totalRewardMultiplier = totalRewardMultiplier + toAdd - toRemove;",
    "startLine": 45,
    "endLine": 45,
    "event": "add"
  }
]